{
    "Items": [
        {
            "levelIndex": 0,
            "editorContent": "//move to near the pillar\n//hold it then push it as far as possible\n//to open a path to the exit\n\nBot.moveLeft(2);\nBot.moveDown(2);\nBot.moveRight();\nBot.hold();\nBot.moveRight(3);\nBot.drop();\nBot.moveUp(2);\nBot.moveDown(2);\nBot.say(\"HI\");\n\n\n"
        },
        {
            "levelIndex": 1,
            "editorContent": "//Step on the button\n\n//try typing these without the double slash:\n//Bot.moveUp();\n//Bot.moveUp();"
        },
        {
            "levelIndex": 2,
            "editorContent": "//move to near the pillar\n//hold it then push it as far as possible\n//to open a path to the exit\n\nBot.moveLeft();"
        },
        {
            "levelIndex": 3,
            "editorContent": "//move right and hold the pillar\n\n//then drag it to the button\n\n//release then move to the exit point\n\nBot.moveRight();\nBot.hold();\n\nwhile(true){\n  Bot.moveLeft();\n  Bot.moveRight();\n//  Bot.moveLeft();\n}"
        },
        {
            "levelIndex": 4,
            "editorContent": "//Don't change these\nint num1 = 3;\nint num2 = 2;\nint num3 = 3;\n\n//pass num1 as an argument\nBot.moveUp();\n\n//pass num2 as an argument\nBot.moveRight();\n\n//pass num3 as an argument\nBot.moveDown();"
        },
        {
            "levelIndex": 5,
            "editorContent": "//use a string!\n//strings are words surrounded by \"\"\n//a gate's password floats above it\n//pay attention to capitalization\n\nBot.say(\"Hello World\");\nBot.moveRight();"
        },
        {
            "levelIndex": 6,
            "editorContent": "//get the int variable from the green panel\nint num = Bot.readInt();\n\n//move the pillar up by the value in the variable\n//then push it to the right button\n\n//then move to the exit point at E2!\n"
        },
        {
            "levelIndex": 7,
            "editorContent": "//get the string within the blue panel\nstring str = Bot.read();\n\n//get the values of the green panels (B0 and B1)\n//and add them\nBot.moveTo(\"B0\");\nint num = Bot.readInt();\n\n//move to the Vox gate\n//then use say() to output the sum\n\n//use the string variable declared before to move to a tile coordinate"
        },
        {
            "levelIndex": 8,
            "editorContent": ""
        },
        {
            "levelIndex": 9,
            "editorContent": "//declare two bools\n//one should be true\n//other should be false\n//use this syntax:\n//bool varName = value;\n\n//pass the true boolean here\nBot.say();\nBot.moveRight();\n//pass the false boolean here\nBot.say();\nBot.moveRight();"
        },
        {
            "levelIndex": 10,
            "editorContent": "//make this true\nif(condition goes here)\n{\n  Bot.moveRight(2);\n}\nBot.moveUp(2);"
        },
        {
            "levelIndex": 11,
            "editorContent": "int num1 = Bot.readInt();\nBot.moveRight();\nint num2 = Bot.readInt();\n\n//use if-else to answer the questions\n//then move right\n\n//compare the two numbers\n//and say the lesser value\n\n//compare the numbers\n//and say the greater value\n"
        },
        {
            "levelIndex": 12,
            "editorContent": "//get the value of the green panel\n\n//if it's greater than 10, move left\n//if not, move right\n\n//get the value of the next green panel\n\n//if it's equal to 50, move up\n//if not, move down\n\n//get the value of the last green panel\n\n//if it's less than 100, move left\n//if it's more than 100, move right"
        },
        {
            "levelIndex": 13,
            "editorContent": "//I've written the skeleton of a while loop for you\n//it's missing a condiion and the code it'll repeat\n//that's where you come in\n\nwhile() //missing condition\n{\n  //make a lap around the square\n  //up to you how you do it\n  //put it between the {}\n}"
        },
        {
            "levelIndex": 14,
            "editorContent": "//use a while loop to reach the end\n//for each loop, grab the generated cube\n//and drop it in the nearest acceptor"
        },
        {
            "levelIndex": 15,
            "editorContent": "//use a finite while loop to reach the end\n//drop cubes in the acceptor until it's full\n//the number above it will tell you how many loops you should do"
        },
        {
            "levelIndex": 16,
            "editorContent": ""
        },
        {
            "levelIndex": 17,
            "editorContent": "//this uses the ReadStringArr function to get an array\r\nstring[] arr = Bot.ReadStringArr();\r\n\r\n//these variables are used for the while loop's condition \r\nint num = 0;\r\nint arrayLength = arr.Length;\r\n\r\n//make a while loop that runs as long as num < arrayLength\r\n//and move to the element at index num over and over\r\n//until the end of the array is reached\nwhile(num < arr.Length){\n  Bot.moveTo(arr[num]);\n  num++;\n}"
        },
        {
            "levelIndex": 18,
            "editorContent": "int[] arr = Bot.ReadIntArr();\n\n//speak the answer to the question\n//and move right\n\n\n//speak the third element\n\n\n//speak the product of the first and fourth\n\n\n//speak the length of the array\n\n\n//speak the sum of the first three elements\n\n\n//speak the final element of the array"
        },
        {
            "levelIndex": 19,
            "editorContent": "//the array's elements are coordinates\n//it tells you the activation order of the buttons\nstring[] arr = Bot.ReadStringArr();\n\n//if you want to loop through the array\n//you could use the array's Length property"
        },
        {
            "levelIndex": 20,
            "editorContent": ""
        }
    ]
}