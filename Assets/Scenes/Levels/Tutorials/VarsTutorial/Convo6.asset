%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c9f7eead655cf2c45aed16b4e66d494f, type: 3}
  m_Name: Convo6
  m_EditorClassIdentifier: 
  dialogueBlocks:
  - npcName: Morgan
    showNpc: 1
    npcPos: 82
    npcSprite: {fileID: 21300000, guid: 5e17b7974d3ebb241b0d9c54dc3442ee, type: 3}
    lines:
    - Hey, what comes to your mind when you hear the word "variable"?
  - npcName: Arthur
    showNpc: 1
    npcPos: 76
    npcSprite: {fileID: 21300000, guid: f2608b585e94e9e4d9f2b18e0c992283, type: 3}
    lines:
    - Mathematics?
  - npcName: Morgan
    showNpc: 1
    npcPos: 82
    npcSprite: {fileID: 21300000, guid: 4a5146b8dbc7e274bbdbeb86f1e9e96c, type: 3}
    lines:
    - Bingo. You can perform math in programming too using arithmetic operators.
      These work on integer values stored inside a variable or not.
    - '"+" for addition, "-" for subtraction, "*" for multiplication, and "/" for
      division. Synatx for a mathematical expression would be just like how you write
      math normally.'
  - npcName: Arthur
    showNpc: 1
    npcPos: 76
    npcSprite: {fileID: 21300000, guid: 2882ea8cc62ca6b4f95e171b4e6c2e78, type: 3}
    lines:
    - 'So if I want to add 5 and 10, I write "5 + 10". And if I want to multiply
      the variables x and y, I write "x * y"? '
  - npcName: Morgan
    showNpc: 1
    npcPos: 82
    npcSprite: {fileID: 21300000, guid: 5e17b7974d3ebb241b0d9c54dc3442ee, type: 3}
    lines:
    - Pretty much. Remember to store it in a variable so you can use the result of
      the operation later. Int variables can take mathematical expressions as values.
    - 'And if you call on it, it''ll give you the result of the expression. For example:

      ~int
      num = 5 * 10; //num is equal to 50.`'
    - You can also pass mathematical expressions as arguments into a method that
      takes numerical values. "~Bot.moveUp(3 + 2)`" will move G4wain up 5 spaces.
  - npcName: Arthur
    showNpc: 1
    npcPos: 76
    npcSprite: {fileID: 21300000, guid: f2608b585e94e9e4d9f2b18e0c992283, type: 3}
    lines:
    - Alright. So what am I looking at here?
  - npcName: Morgan
    showNpc: 1
    npcPos: 82
    npcSprite: {fileID: 21300000, guid: 5e17b7974d3ebb241b0d9c54dc3442ee, type: 3}
    lines:
    - Those blue gates are Vox Gates. Unlike mechanical and key gates, they open
      only when the password is spoken.
    - These ones have numbers as their passwords. I know the passwords of course,
      but I figured I'll make you work for it and use the arithmetic operators to
      figure them out.
    - The "~Bot.say()`" method will make G4wain speak. It takes int and string arguments
      - so both numbers and words. But for now, you'll only be using numbers. Get
      to it!
